<!--
build.xml

Master ant build file for all Java software projects at LOCI.
Download Apache Ant from http://ant.apache.org/.
Type "ant -p" for a list of targets.

===============================================================================
This build file handles the following projects:

Bio-Formats
    JAR file:      bio-formats.jar
    Folders:       loci/formats
                   loci/formats/*
    Main class:    loci.formats.ImageViewer
    Dependencies:  None
    Targets:       jar-formats

VisBio
    JAR file:      visbio.jar
    Folders:       loci/visbio
                   loci/visbio/*
    Main class:    loci.visbio.VisBio
    Dependencies:  bio-formats.jar
                   commons-httpclient-2.0-rc2.jar (ome-java.jar)
                   commons-logging.jar (ome-java.jar)
                   forms-1.0.4.jar
                   ij.jar
                   looks-1.2.2.jar
                   ome-java.jar
                   visad-lite.jar
                   xmlrpc-1.2-b1.jar (ome-java.jar)
    Targets:       jar-visbio
                   source-visbio
                   docs-visbio
                   dist-visbio

LOCI Plugins for ImageJ
    JAR file:      loci_plugins.jar
    Folders:       loci/plugins
                   loci/plugins/*
                   loci/ome/viewer (temporary)
    Main class:    loci.plugins.About
    IJ plugins:    loci.plugins.browser.LociDataBrowser
                   loci.plugins.LociImporter
                   loci.plugins.LociExporter
                   loci.plugins.ome.OMEPlugin
    Dependencies:  bio-formats.jar
                   commons-httpclient-2.0-rc2.jar (ome-java.jar)
                   commons-logging.jar (ome-java.jar)
                   ome-java.jar
                   xmlrpc-1.2-b1.jar (ome-java.jar)
    Targets:       jar-plugins

OME Metadata Notebook
    JAR file:      ome-notebook.jar
    Folders:       loci/ome/notebook
                   loci/ome/viewer (temporary)
    Main class:    loci.ome.notebook.MetadataNotebook
    Dependencies:  bio-formats.jar
                   commons-httpclient-2.0-rc2.jar (ome-java.jar)
                   commons-logging.jar (ome-java.jar)
                   forms-1.0.4.jar
                   ome-java.jar
                   xmlrpc-1.2-b1.jar (ome-java.jar)
    Targets:       jar-notebook

Leica Converter
    JAR file:      LeicaConverter.jar
    Folders:       loci/apps/leica
    Main class:    loci.apps.leica.LeicaConverter
    Dependencies:  bio-formats.jar
                   ome-java.jar
    Targets:       jar-leica

QT TIFF Converter
    JAR file:      QTConverter.jar
    Folders:       loci/apps/qt
                   some loci/formats
    Main class:    loci.apps.qt.QTConverter
    Dependencies:  None (custom built)
    Targets:       jar-qt

Slim Plotter
    JAR file:      SlimPlotter.jar
    Folders:       loci/apps/slim
                   some loci/formats and loci/visbio
    Main class:    loci.apps.slim.SlimPlotter
    Dependencies:  visad-lite.jar
    Targets:       jar-slim
                   dist-slim

===============================================================================
The following external dependencies (in the jar folder) may be required:

Apple eAWT stubs
    JAR file:  AppleJavaExtensions.jar
    URL:       http://developer.apple.com/samplecode/AppleJavaExtensions/
    Notes:     Required to compile VisBio on non-Mac OS X machines

Apache Jakarta Commons HttpClient
    JAR file:  commons-httpclient-2.0-rc2.jar
    URL:       http://jakarta.apache.org/commons/httpclient/
    Notes:     Required for OME Java to communicate with OME servers

Apache Jakarta Commons Logging
    JAR file:  commons-logging.jar
    URL:       http://jakarta.apache.org/commons/logging/
    Notes:     Used by OME Java

JGoodies Forms
    JAR file:  forms-1.0.4.jar
    URL:       http://www.jgoodies.com/freeware/forms/index.html
    Notes:     Used for layout by VisBio and OME Metadata Notebook

ImageJ
    JAR file:  ij.jar
    URL:       http://rsb.info.nih.gov/ij/
    Notes:     Bundled with VisBio to achieve ImageJ interconnectivity

JGoodies Looks
    JAR file:  looks-1.2.2.jar
    URL:       http://www.jgoodies.com/freeware/looks/index.html
    Notes:     Used for a nicer Look & Feel by VisBio

OME Java
    JAR file:  ome-java.jar
    URL:       http://openmicroscopy.org/api/java/
    Notes:     Used by VisBio and the OME Plugin for ImageJ to connect to OME;
               used by Bio-Formats and the OME Notebook to work with OME-XML

Apache Jakarta POI
    JAR file:  poi-2.5.1-final-20040804.jar
    URL:       http://jakarta.apache.org/poi/
    Notes:     Not used (previously used by Bio-Formats)

Skin Look and Feel
    JAR file:  skinlf.jar
    URL:       http://skinlf.l2fprod.com/
    Notes:     Not used (may be used in the future for flexible skinning)

VisAD
    JAR file:  visad-lite.jar
    URL:       http://www.ssec.wisc.edu/~billh/visad.html
    Notes:     Stripped down VisAD library used by VisBio and Slim Plotter

Apache XML-RPC
    JAR file:  xmlrpc-1.2-b1.jar
    URL:       http://ws.apache.org/xmlrpc/
    Notes:     Required for OME Java to communicate with OME servers
-->

<project name="LOCI Software" default="compile" basedir=".">
  <description>
    Master build file for all Java software projects at LOCI
  </description>

  <property resource="build.properties"/>
  <property file="${user.home}/.ant-global.properties"/>

  <condition property="isUnix"><os family="unix"/></condition>

  <!-- Global build targets -->

  <target name="init">
    <tstamp>
      <format property="DATE" pattern="d MMMMM yyyy"/>
      <format property="YEAR" pattern="yyyy"/>
    </tstamp>
  </target>

  <target name="compile" depends="copy-source"
    description="compile LOCI software packages from source">
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${dest.dir}" destdir="${classes.dir}"
      classpath="${ext.jars}" deprecation="true" source="1.4" target="1.4"/>
  </target>

  <target name="jars"
    depends="jar-formats, jar-visbio, jar-plugins, jar-notebook, jar-leica, jar-qt, jar-slim"
    description="generate JAR files for LOCI software packages"/>

  <target name="docs" depends="copy-source"
    description="generate Javadocs for LOCI software packages">
    <javadoc sourcepath="${dest.dir}" destdir="${docs.dir}/api"
      author="true" version="true" use="true" windowtitle="LOCI Software API">
      <packageset dir="${dest.dir}"/>
      <doctitle><![CDATA[<h1>LOCI Software</h1>]]></doctitle>
      <bottom><![CDATA[${copyright}]]></bottom>
      <link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
    </javadoc>
  </target>

  <target name="clean" description="remove all build files">
    <delete dir="${build.dir}"/>
  </target>

  <!-- Internal build targets -->

  <target name="copy-source" depends="init">
    <!-- copy binary files without filtering -->
    <copy todir="${dest.dir}" preservelastmodified="true">
      <fileset dir="${src.dir}" includes="loci/**"
        excludes="**/*.class **/*.java **/*.config **/*.txt ${ignore.source}"/>
    </copy>
    <!-- copy source files with filtering -->
    <filter token="date" value="${DATE}"/>
    <copy todir="${dest.dir}" filtering="true" preservelastmodified="true">
      <fileset dir="${src.dir}" includes="loci/**"
        excludes="**/*.class ${ignore.source}"/>
    </copy>
  </target>

  <target name="copy-jars">
    <!-- copy needed external JARs into build jars folder -->
    <copy todir="${jar.dir}" preservelastmodified="true">
      <fileset dir="jar"/>
    </copy>
  </target>

  <!-- Bio-Formats -->

  <target name="jar-formats" depends="compile"
    description="generate JAR file for Bio-Formats">
    <copy todir="${classes.dir}" preservelastmodified="true">
      <fileset dir="${src.dir}" includes="${formats.resources}"/>
    </copy>
    <mkdir dir="${jar.dir}"/>
    <jar jarfile="${jar.dir}/bio-formats.jar" basedir="${classes.dir}"
      includes="${formats.files}">
      <manifest>
        <attribute name="Main-Class" value="loci.formats.ImageViewer"/>
      </manifest>
    </jar>
  </target>

  <!-- VisBio -->

  <target name="jar-visbio" depends="compile, copy-jars, jar-formats"
    description="generate JAR file for VisBio">
    <copy todir="${classes.dir}" preservelastmodified="true">
      <fileset dir="${src.dir}" includes="${visbio.resources}"/>
    </copy>
    <jar jarfile="${jar.dir}/visbio.jar" basedir="${classes.dir}"
      includes="${visbio.files}">
      <manifest>
        <attribute name="Main-Class" value="loci.visbio.VisBio"/>
        <attribute name="Class-Path" value="${visbio.classpath}"/>
      </manifest>
    </jar>
  </target>

  <target name="source-visbio" depends="copy-source"
    description="generate source bundle for VisBio">
    <zip zipfile="${build.dir}/visbio_src.zip" basedir="${dest.dir}"
      includes="loci/visbio/**"/>
  </target>

  <target name="docs-visbio" depends="copy-source"
    description="generate Javadocs for VisBio">
    <javadoc sourcepath="${dest.dir}" destdir="${visbio.docs-dir}/docs/api"
      author="true" version="true" use="true" windowtitle="LOCI Software API">
      <packageset dir="${dest.dir}" includes="loci/visbio/**"/>
      <doctitle><![CDATA[<h1>VisBio</h1>]]></doctitle>
      <bottom><![CDATA[${copyright}]]></bottom>
      <link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
    </javadoc>
    <zip zipfile="${build.dir}/visbio_docs.zip" basedir="${visbio.docs-dir}"/>
  </target>

  <target name="dist-visbio" depends="dist-visbio-win32, dist-visbio-win32-nojre, dist-visbio-macosx, dist-visbio-linux, dist-visbio-nojre"/>

  <target name="dist-visbio-win32" depends="jar-visbio, jar-formats">
    <copy todir="${visbio.win32-dir}" preservelastmodified="true">
      <fileset dir="dist/visbio/win32"/>
      <fileset dir="loci/visbio" includes="${visbio.dist-files}"/>
      <fileset dir="${jar.dir}" includes="visbio.jar ${visbio.classpath}"/>
    </copy>
    <fixcrlf srcdir="${visbio.win32-dir}" eol="dos"
      includes="*.txt *.cpp *.m plugins/*.txt"/>
    <untar src="dist/jre-win32.tar.gz" dest="${visbio.win32-dir}"
      overwrite="false" compression="gzip"/>
    <zip destfile="${dist.dir}/visbio${visbio.version}_win32.zip"
      basedir="${dist.dir}/visbio/win32"/>
  </target>

  <target name="dist-visbio-win32-nojre" depends="jar-visbio, jar-formats">
    <copy todir="${visbio.win32-nojre-dir}"
      preservelastmodified="true">
      <fileset dir="dist/visbio/win32" excludes="launcher.cfg"/>
      <fileset dir="dist/visbio/win32-nojre"/>
      <fileset dir="loci/visbio" includes="${visbio.dist-files}"/>
      <fileset dir="${jar.dir}" includes="visbio.jar ${visbio.classpath}"/>
    </copy>
    <fixcrlf srcdir="${visbio.win32-nojre-dir}" eol="dos"
      includes="*.txt *.cpp *.m plugins/*.txt"/>
    <zip destfile="${dist.dir}/visbio${visbio.version}_win32_nojre.zip"
      basedir="${dist.dir}/visbio/win32-nojre"/>
  </target>

  <!-- HACK - limit OS to *nix due to file permission issues -->
  <target name="dist-visbio-macosx" if="isUnix"
    depends="jar-visbio, jar-formats">
    <copy todir="${visbio.macosx-dir}"
      preservelastmodified="true">
      <fileset dir="dist/visbio/macosx"/>
      <fileset dir="loci/visbio" includes="${visbio.dist-files}"/>
    </copy>
    <fixcrlf srcdir="${visbio.macosx-dir}" eol="mac"
      includes="*.txt *.cpp *.m plugins/*.txt"/>
    <!-- HACK - copy does not preserve permissions; chmod them back -->
    <chmod perm="+x">
      <fileset dir="${visbio.macosx-dir}"
        includes="visbio omeul VisBio.app/Contents/MacOS/JavaApplicationStub"/>
    </chmod>
    <copy todir="${visbio.macosx-dir}/VisBio.app/Contents/Resources/Java">
      <fileset dir="${jar.dir}" includes="visbio.jar ${visbio.classpath}"/>
    </copy>
<!--
    <tar destfile="${dist.dir}/visbio${visbio.version}_macosx.tar.gz"
      basedir="${dist.dir}/visbio/macosx" compression="gzip"/>
-->
    <!-- HACK - tar does not preserve permissions; use exec instead -->
    <exec executable="tar">
      <arg value="czf"/>
      <arg value="${dist.dir}/visbio${visbio.version}_macosx.tar.gz"/>
      <arg value="-C"/>
      <arg value="${dist.dir}/visbio/macosx VisBio"/>
    </exec>
  </target>

  <!-- HACK - limit OS to *nix due to file permission issues -->
  <target name="dist-visbio-linux" if="isUnix"
    depends="jar-visbio, jar-formats">
    <copy todir="${visbio.linux-dir}" preservelastmodified="true">
      <fileset dir="dist/visbio/linux"/>
      <fileset dir="loci/visbio" includes="${visbio.dist-files}"/>
      <fileset dir="${jar.dir}" includes="visbio.jar ${visbio.classpath}"/>
    </copy>
    <fixcrlf srcdir="${visbio.linux-dir}" eol="unix"
      includes="*.txt *.cpp *.m plugins/*.txt"/>
    <!-- HACK - copy does not preserve permissions; chmod them back -->
    <chmod perm="+x">
      <fileset dir="${visbio.linux-dir}" includes="visbio omeul"/>
    </chmod>
<!--
    <untar src="dist/jre-linux.tar.gz" dest="${visbio.linux-dir}"
      overwrite="false" compression="gzip"/>
-->
    <!-- HACK - untar does not restore permissions; use exec instead -->
    <exec executable="tar">
      <arg value="xzf"/>
      <arg value="dist/jre-linux.tar.gz"/>
      <arg value="-C"/>
      <arg value="${visbio.linux-dir}"/>
    </exec>
<!--
    <tar destfile="${dist.dir}/visbio${visbio.version}_linux.tar.gz"
      basedir="${dist.dir}/visbio/linux" compression="gzip"/>
-->
    <!-- HACK - tar does not preserve permissions; use exec instead -->
    <exec executable="tar">
      <arg value="czf"/>
      <arg value="${dist.dir}/visbio${visbio.version}_linux.tar.gz"/>
      <arg value="-C"/>
      <arg value="${dist.dir}/visbio/linux visbio${visbio.version}"/>
    </exec>
  </target>

  <!-- HACK - limit OS to *nix due to file permission issues -->
  <target name="dist-visbio-nojre" if="isUnix"
    depends="jar-visbio, jar-formats">
    <copy todir="${visbio.nojre-dir}" preservelastmodified="true">
      <fileset dir="dist/visbio/linux"/>
      <fileset dir="loci/visbio" includes="${visbio.dist-files}"/>
      <fileset dir="${jar.dir}" includes="visbio.jar ${visbio.classpath}"/>
    </copy>
    <fixcrlf srcdir="${visbio.nojre-dir}" eol="unix"
      includes="*.txt *.cpp *.m plugins/*.txt"/>
    <!-- HACK - copy does not preserve permissions; chmod them back -->
    <chmod perm="+x">
      <fileset dir="${visbio.nojre-dir}" includes="visbio omeul"/>
    </chmod>
<!--
    <tar destfile="${dist.dir}/visbio${visbio.version}.tar.gz"
      basedir="${dist.dir}/visbio/nojre" compression="gzip"/>
-->
    <!-- HACK - tar does not preserve permissions; use exec instead -->
    <exec executable="tar">
      <arg value="czf"/>
      <arg value="${dist.dir}/visbio${visbio.version}.tar.gz"/>
      <arg value="-C"/>
      <arg value="${dist.dir}/visbio/nojre visbio${visbio.version}"/>
    </exec>
  </target>

  <!-- LOCI Plugins for ImageJ -->

  <target name="jar-plugins" depends="compile, copy-jars, jar-formats"
    description="generate JAR file for LOCI Plugins for ImageJ">
    <jar jarfile="${jar.dir}/loci_plugins.jar"
      basedir="${src.dir}/loci/plugins" includes="plugins.config">
      <manifest>
        <attribute name="Main-Class" value="loci.plugins.About"/>
      </manifest>
    </jar>
    <jar jarfile="${jar.dir}/loci_plugins.jar" basedir="${classes.dir}"
      includes="${plugins.files}" excludes="loci/plugins/plugins.config"
      update="true">
    </jar>
  </target>

  <!-- OME Metadata Notebook -->

  <target name="jar-notebook" depends="compile, copy-jars, jar-formats"
    description="generate JAR file for OME Metadata Notebook">
    <copy todir="${classes.dir}" preservelastmodified="true">
      <fileset dir="${src.dir}" includes="${notebook.resources}"/>
    </copy>
    <jar jarfile="${jar.dir}/ome-notebook.jar" basedir="${classes.dir}"
      includes="${notebook.files}">
      <manifest>
        <attribute name="Main-Class"
          value="loci.ome.notebook.MetadataNotebook"/>
        <attribute name="Class-Path" value="${notebook.classpath}"/>
      </manifest>
    </jar>
  </target>

  <!-- Leica Converter -->

  <target name="jar-leica" depends="compile, copy-jars, jar-formats"
    description="generate JAR file for Leica Converter">
    <jar jarfile="${jar.dir}/LeicaConverter.jar" basedir="${classes.dir}"
      includes="${leica.files}">
      <manifest>
        <attribute name="Main-Class" value="loci.apps.leica.LeicaConverter"/>
        <attribute name="Class-Path" value="${leica.classpath}"/>
      </manifest>
    </jar>
  </target>

  <!-- QT TIFF Converter -->

  <target name="jar-qt" depends="compile"
    description="generate JAR file for QT TIFF Converter">
    <mkdir dir="${jar.dir}"/>
    <jar jarfile="${jar.dir}/QTConverter.jar" basedir="${classes.dir}"
      includes="${qt.files}">
      <manifest>
        <attribute name="Main-Class" value="loci.apps.qt.QTConverter"/>
      </manifest>
    </jar>
  </target>

  <!-- Slim Plotter -->

  <target name="jar-slim" depends="compile, copy-jars"
    description="generate JAR file for Slim Plotter">
    <jar jarfile="${jar.dir}/SlimPlotter.jar" basedir="${classes.dir}"
      includes="${slim.files}">
      <manifest>
        <attribute name="Main-Class" value="loci.apps.slim.SlimPlotter"/>
        <attribute name="Class-Path" value="${slim.classpath}"/>
      </manifest>
    </jar>
  </target>

  <target name="dist-slim" if="isUnix" depends="copy-jars, jar-slim">
    <copy todir="${slim.dist-dir}" preservelastmodified="true">
      <fileset dir="dist/slim"/>
      <fileset dir="${jar.dir}" includes="SlimPlotter.jar ${slim.classpath}"/>
    </copy>
    <!-- HACK - copy does not preserve permissions; chmod them back -->
    <chmod perm="+x">
      <fileset dir="${slim.dist-dir}" includes="slim"/>
    </chmod>
<!--
    <zip destfile="${dist.dir}/slim.zip" basedir="${dist.dir}/slim"/>
-->
    <!-- HACK - zip does not preserve permissions; use exec instead -->
    <exec executable="zip" dir="${dist.dir}/slim">
      <arg value="-r9"/>
      <arg value="../slim.zip"/>
      <arg value="SlimPlotter"/>
    </exec>
  </target>

</project>
