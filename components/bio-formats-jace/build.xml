<!--
build.xml

Ant build file for the Bio-Formats C++ bindings.
Download Apache Ant from http://ant.apache.org/.
Type "ant -p" for a list of targets.

Note that this build file extends common.xml rather than java.xml,
because this component does not consist of Java source files.
-->

<project name="bfcpp" default="compile" basedir=".">
  <description>
    Build file for Bio-Formats C++ bindings
  </description>
  <property file="base.properties"/>
  <import file="${root.dir}/common.xml"/>
  <property file="build.properties"/>

  <target name="check-jace">
    <available file="${jace.home}/release/lib" property="jaceFound"/>
    <if>
      <isset property="jaceFound"/>
      <else>
<echo>
This component requires Jace, available from:
  http://sourceforge.net/projects/jace/

Please set the jace.home property to point to
your Jace installation directory. E.g.:
  ant -Djace.home=${user.home}/jace

You can check out the latest Jace code from
the Subversion repository using the command:
  svn co https://jace.svn.sourceforge.net/svnroot/jace/trunk jace
</echo>
        <fail message="Jace not found."/>
      </else>
    </if>
  </target>

  <target name="compile-jace" depends="check-jace"
    description="compile Jace Java classes">
    <available file="${jace.home}/release/lib/jace.jar"
      property="jaceJarsExist"/>
    <if>
      <isset property="jaceJarsExist"/>
      <then>
<echo>Jace libraries exist; run clean-jace target first to recompile.</echo>
      </then>
      <else>
        <ant dir="${jace.home}/source/java"/>
      </else>
    </if>
  </target>

  <target name="gen-proxies" depends="compile-jace"
    description="generate C++ proxies for Bio-Formats Java library">
    <available file="${proxies.dir}" property="proxiesExist"/>
    <if>
      <isset property="proxiesExist"/>
      <then>
<echo>Proxies exist; run clean-proxies target first to regenerate.</echo>
      </then>
      <else>
        <mkdir dir="${proxies.dir}/include"/>
        <mkdir dir="${proxies.dir}/source"/>
        <!-- NB: Need to fork or else Ant raises a cryptic exception. -->
        <java classname="jace.autoproxy.AutoProxy" fork="true">
          <arg path="include"/>
          <arg path="source"/>
          <arg path="${proxies.dir}/include"/>
          <arg path="${proxies.dir}/source"/>
          <arg path="${jre.runtime}:${artifact.dir}/bio-formats.jar"/>
          <classpath>
            <fileset dir="${jace.home}/release/lib">
              <include name="*.jar"/>
            </fileset>
          </classpath>
          <arg value="-mindep"/>
        </java>
      </else>
    </if>
  </target>

  <target name="gen-makefile" depends="check-jace, gen-proxies"
    description="Generate build system for Bio-Formats C++ bindings">
    <mkdir dir="${build.dir}"/>
    <exec executable="cmake" dir="${build.dir}" failonerror="true">
      <arg value="-DJACE_DIR=${jace.home}"/>
      <arg value=".."/>
    </exec>
  </target>

  <target name="copy-libs" depends="check-jace, compile-jace">
    <mkdir dir="${build.dir}"/>
    <copy file="${artifact.dir}/loci_tools.jar" todir="${build.dir}"/>
    <copy file="${jace.home}/release/lib/jace-runtime.jar"
      todir="${build.dir}"/>
  </target>

  <target name="compile" depends="gen-makefile, copy-libs"
    description="Build Bio-Formats C++ library">
    <exec executable="make" dir="${build.dir}" failonerror="true"/>
  </target>

  <target name="clean-jace" depends="check-jace"
    description="clean Jace libraries">
    <ant dir="${jace.home}/source/java" target="clean"/>
    <delete file="${jace.home}/release/lib/jace.jar"/>
    <delete file="${jace.home}/release/lib/jace-runtime.jar"/>
  </target>

  <target name="clean-proxies" description="clean C++ proxies">
    <delete dir="${proxies.dir}"/>
  </target>

</project>
