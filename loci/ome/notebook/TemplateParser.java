package loci.ome.notebook;

import javax.xml.parsers.*;
import org.w3c.dom.*;
import java.util.Vector;
import java.io.*;
import org.xml.sax.SAXException;

/**
*   TemplateParser.java  : a simple xml parser to help set up the 
*      MetadataNotebook's gui based on the commonly used data specified
*      in Template.xml
*
*   Written by: Christopher Peterson <crpeterson2@wisc.edu>
*/

public class TemplateParser
{
  //  --Static Fields--

  /** Factory for generating document builders. */
  public static final DocumentBuilderFactory DOC_FACT =
    DocumentBuilderFactory.newInstance();

  //  --Fields--
  
  /** holds a list of the tabs necessary gathered from Template.xml*/
  protected Element[] tabList;
  
  /** Document generated by the DOM's parse*/
  protected Document templateDoc;
  
  /** The root xml Element in the Document*/
  protected Element root;
  
  //  --Constructor--
  
  /** Parses the template document designated by the file argument*/
  public TemplateParser(File file) 
  {
  // Parse the xml file using the DOM
    try {
      DocumentBuilder db = DOC_FACT.newDocumentBuilder();
      templateDoc = db.parse(file);
      root = templateDoc.getDocumentElement();
      NodeList nList = root.getChildNodes();
      int nLength = nList.getLength();
      Vector v = new Vector(nLength);
      for(int i = 0;i < nLength;i++) {
        Node node = nList.item(i);
      	if(node instanceof Element) {
          Element thisElement = (Element) node;
          if( "OMEElement".equals(thisElement.getTagName()) ) v.add(thisElement);
        }
      }
      tabList = new Element[v.size()];
      for(int i = 0;i < v.size();i++) {
        tabList[i] = (Element) v.elementAt(i);
      }
    }
    catch (Exception e) { 
      System.out.println("Some exception occured: " + e.toString());
      e.printStackTrace();
    }
  }
  
  /** returns an array of Elements representing the tabs in the notebook*/
  public Element[] getTabs() {
    return tabList;
  }
  
  /** returns the version information from the template*/
  public String getVersion() {
    return root.getAttribute("Version");
  }
  
  /** used for debugging */
  public static void main(String[] args)
  {
    File f = new File("Template.xml");
    TemplateParser tp = new TemplateParser(f);
    Element[] eList = tp.getTabs();
    for(int i = 0;i<eList.length;i++) {
      System.out.println(eList[i].getAttribute("XMLName"));
    }
  }
}